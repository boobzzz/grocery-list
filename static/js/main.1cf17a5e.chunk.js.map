{"version":3,"sources":["redux/selectors.js","redux/actions.js","components/Filter/ByStatus/FilterByStatus.js","components/UI/Buttons/ToggleBtn/ToggleBtn.js","components/UI/Buttons/DeleteBtn/DeleteBtn.js","components/Product/List/Item/ListItem.js","components/UI/Buttons/AddBtn/AddBtn.js","components/UI/Modal/Modal.js","components/UI/Field/Text/FieldText.js","components/UI/Field/Select/FieldSelect.js","components/Product/Form/FormNewItem.js","components/Product/List/ProductList.js","App.js","redux/reducer.js","store/store.js","index.js","components/Product/Form/FormNewItem.module.css","components/Filter/ByStatus/FilterByStatus.module.css","components/UI/Buttons/ToggleBtn/ToggleBtn.module.css","components/UI/Buttons/DeleteBtn/DeleteBtn.module.css","components/Product/List/Item/ListItem.module.css","components/UI/Buttons/AddBtn/AddBtn.module.css","components/Product/List/ProductList.module.css"],"names":["getListSelector","createSelector","state","list","R","priorityTitleSort","getStatusSelector","status","filter","i","addEntry","entry","type","payload","statusOptions","name","value","connect","dispatch","filterByStatus","A","props","className","classes","ByStatus","onChange","e","target","map","option","key","ToggleBtn","clicked","href","Toggle","onClick","DeleteBtn","Delete","ListItem","title","priority","toggle","remove","Item","AddBtn","Add","ModalContainer","modal","modalBody","closeBtn","Modal","isOpen","ModalHeader","close","ModalBody","FieldText","id","label","htmlFor","field","meta","autoComplete","touched","error","FieldSelect","options","priorityOptions","initialValues","img","validationSchema","Yup","required","Form","onSubmit","values","resetForm","nanoid","SubmitBtn","S","toggleStatus","deleteEntry","useState","setModal","toggleModal","List","item","App","initialState","productReducer","action","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1cf17a5e.chunk.js","sourcesContent":["import * as R from 'ramda';\r\nimport { createSelector } from 'reselect';\r\n\r\nconst getList = (state) => state.list\r\nconst getListSelector = createSelector(getList, (list) => {\r\n    const priorityTitleSort = R.sortWith([\r\n        R.ascend(R.prop('priority')),\r\n        R.ascend(R.prop('title'))\r\n    ])\r\n\r\n    return priorityTitleSort(list)\r\n})\r\n\r\nconst getStatus = (state) => state.status\r\nexport const getStatusSelector = createSelector(\r\n    getListSelector, getStatus, (list, status) => {\r\n        if (status === 'all') return list\r\n\r\n        return list.filter(i => i.status === status)\r\n})\r\n","export const deleteEntry = (id) => {\r\n    return {\r\n        type: 'DELETE_ITEM',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const addEntry = (entry) => {\r\n    return {\r\n        type: 'ADD_ITEM',\r\n        payload: entry\r\n    }\r\n}\r\n\r\nexport const toggleStatus = (id, status) => {\r\n    return {\r\n        type: 'TOGGLE_STATUS',\r\n        payload: {\r\n            id: id,\r\n            status: status\r\n        }\r\n    }\r\n}\r\n\r\nexport const filterByStatus = (status) => {\r\n    return {\r\n        type: 'FILTER',\r\n        payload: status\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as A from '../../../redux/actions';\r\n\r\nimport classes from './FilterByStatus.module.css';\r\n\r\nconst statusOptions = [\r\n    {name: 'all', value: 'all'},\r\n    {name: 'have', value: 'have'},\r\n    {name: 'ran out', value: 'ran out'}\r\n]\r\n\r\nconst FilterByStatus = (props) => {\r\n    const { filterByStatus } = props\r\n\r\n    const changeHandler = (e) => {\r\n        let value = e.target.value\r\n\r\n        filterByStatus(value)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.ByStatus}>\r\n            <label>By status\r\n                <select onChange={changeHandler}>\r\n                    {statusOptions.map(option =>\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.name}\r\n                        </option>\r\n                    )}\r\n                </select>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        filterByStatus: (status) => dispatch(A.filterByStatus(status))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(FilterByStatus);\r\n","import React from 'react';\r\n\r\nimport classes from './ToggleBtn.module.css';\r\n\r\nconst ToggleBtn = ({ clicked }) => {\r\n    return (\r\n        <a\r\n            href=\"#/\"\r\n            className={classes.Toggle}\r\n            onClick={clicked}>\r\n            <i>status</i>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default ToggleBtn;\r\n","import React from 'react';\r\nimport { RiDeleteBin2Line } from 'react-icons/ri';\r\n\r\nimport classes from './DeleteBtn.module.css';\r\n\r\nconst DeleteBtn = ({ clicked }) => {\r\n    return (\r\n        <a\r\n            href=\"#/\"\r\n            className={classes.Delete}\r\n            onClick={clicked}>\r\n            <RiDeleteBin2Line />\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default DeleteBtn;\r\n","import React from 'react';\r\n\r\nimport ToggleBtn from '../../../UI/Buttons/ToggleBtn/ToggleBtn';\r\nimport DeleteBtn from '../../../UI/Buttons/DeleteBtn/DeleteBtn';\r\nimport classes from './ListItem.module.css';\r\n\r\nconst ListItem = (props) => {\r\n    const { title, status, priority, toggle, remove } = props\r\n\r\n    return (\r\n        <div className={classes.Item}>\r\n            <h4>{title}</h4>\r\n            <div>\r\n                <span>Status: <i>{status}</i></span>\r\n                <span>Priority: <i>{priority}</i></span>\r\n            </div>\r\n            <div>\r\n                <ToggleBtn clicked={toggle} />\r\n                <DeleteBtn clicked={remove} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\n\r\nimport classes from './AddBtn.module.css';\r\n\r\nconst AddBtn = ({ clicked }) => {\r\n    return (\r\n        <div className={classes.Add}>\r\n            <a href=\"#/\" onClick={clicked}>\r\n                add new item\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBtn;\r\n","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nimport './modal.css';\r\n\r\nconst ModalContainer = (props) => {\r\n    const { modal, toggle, title, modalBody } = props\r\n    const closeBtn =\r\n        <button className=\"closeBtn\" onClick={toggle}>\r\n            &times;\r\n        </button>\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle} close={closeBtn}>\r\n                {title}\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                {modalBody}\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalContainer;\r\n","import React from 'react';\r\nimport { Field } from 'formik';\r\n\r\nconst FieldText = ({ id, type, label }) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={id}>{label}</label>\r\n            <Field name={id}>\r\n                {({ field, meta }) =>\r\n                    <div>\r\n                        <input\r\n                            id={id}\r\n                            type={type}\r\n                            autoComplete=\"off\"\r\n                            {...field} />\r\n                        {meta.touched && meta.error\r\n                        ? <div>{meta.error}</div>\r\n                        : null}\r\n                    </div>\r\n                }\r\n            </Field>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FieldText;\r\n","import React from 'react';\r\nimport { Field } from 'formik';\r\n\r\nconst FieldSelect = ({ id, label, options }) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={id}>{label}</label>\r\n            <Field name={id}>\r\n                {({ field, meta }) =>\r\n                    <div>\r\n                        <select id={id} {...field}>\r\n                            {options.map(option =>\r\n                                <option key={option.value}>\r\n                                    {option.name}\r\n                                </option>\r\n                            )}\r\n                        </select>\r\n                        {meta.touched && meta.error\r\n                        ? <div>{meta.error}</div>\r\n                        : null}\r\n                    </div>\r\n                }\r\n            </Field>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FieldSelect;\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { nanoid } from 'nanoid';\r\nimport { connect } from 'react-redux';\r\nimport * as A from '../../../redux/actions';\r\n\r\nimport FieldText from '../../UI/Field/Text/FieldText';\r\nimport FieldSelect from '../../UI/Field/Select/FieldSelect';\r\nimport classes from './FormNewItem.module.css';\r\n\r\nconst statusOptions = [\r\n    {name: 'Choose item status...', value: ''},\r\n    {name: 'have', value: 'have'},\r\n    {name: 'ran out', value: 'out'}\r\n]\r\nconst priorityOptions = [\r\n    {name: 'Choose item priority...', value: ''},\r\n    {name: '1', value: '1'},\r\n    {name: '2', value: '2'},\r\n    {name: '3', value: '3'},\r\n    {name: '4', value: '4'},\r\n    {name: '5', value: '5'},\r\n]\r\nconst initialValues = {\r\n    img: '',\r\n    title: '',\r\n    status: '',\r\n    priority: ''\r\n}\r\nconst validationSchema = Yup.object({\r\n    img: Yup.string().required('Enter item image url *'),\r\n    title: Yup.string().required('Enter item title *'),\r\n    status: Yup.string().required('Choose item status *'),\r\n    priority: Yup.string().required('Choose item priority *')\r\n})\r\n\r\nconst FormNewItem = (props) => {\r\n    const { addEntry } = props\r\n\r\n    const handleSubmit = (values, { resetForm }) => {\r\n        const { img, title, status, priority } = values\r\n        let entry = {\r\n            id: nanoid(24),\r\n            img: img,\r\n            title: title,\r\n            status: status,\r\n            priority: priority\r\n        }\r\n\r\n        addEntry(entry)\r\n        resetForm({ values: '' })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.Form}>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={handleSubmit}>\r\n                    {() => {\r\n                        return (\r\n                            <Form>\r\n                                <FieldText id=\"img\" type=\"text\" label=\"item image URL *\" />\r\n                                <FieldText id=\"title\" type=\"text\" label=\"item title *\" />\r\n                                <FieldSelect id=\"status\" label=\"status *\" options={statusOptions} />\r\n                                <FieldSelect id=\"priority\" label=\"priority *\" options={priorityOptions} />\r\n                                <div className={classes.SubmitBtn}>\r\n                                    <button type=\"submit\">\r\n                                        add item\r\n                                    </button>\r\n                                </div>\r\n                            </Form>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addEntry: (entry) => dispatch(A.addEntry(entry)),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(FormNewItem);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as S from '../../../redux/selectors';\r\nimport * as A from '../../../redux/actions';\r\n\r\nimport FilterByStatus from '../../Filter/ByStatus/FilterByStatus';\r\nimport ListItem from './Item/ListItem';\r\nimport AddBtn from '../../UI/Buttons/AddBtn/AddBtn';\r\nimport ModalContainer from '../../UI/Modal/Modal';\r\nimport FormNewItem from '../Form/FormNewItem';\r\nimport classes from './ProductList.module.css';\r\n\r\nconst ProductList = (props) => {\r\n    const { list, toggleStatus, deleteEntry } = props\r\n    const [ modal, setModal ] = useState(false)\r\n\r\n    const toggleModal = () => setModal(!modal)\r\n\r\n    const changeStatus = (id, status) => {\r\n        status === 'have'\r\n        ? toggleStatus(id, 'ran out')\r\n        : toggleStatus(id, 'have')\r\n    }\r\n\r\n    const deleteItem = (id) => deleteEntry(id)\r\n\r\n    return (\r\n        <>\r\n            <FilterByStatus />\r\n            <div className={classes.List}>\r\n                {list.map(item =>\r\n                    <ListItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        status={item.status}\r\n                        priority={item.priority}\r\n                        remove={() => deleteItem(item.id)}\r\n                        toggle={() => changeStatus(item.id, item.status)}/>\r\n                )}\r\n                <AddBtn clicked={toggleModal} />\r\n            </div>\r\n            <ModalContainer\r\n                modal={modal}\r\n                toggle={toggleModal}\r\n                title=\"New Item\"\r\n                modalBody={<FormNewItem />} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        list: S.getStatusSelector(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addEntry: (entry) => dispatch(A.addEntry(entry)),\r\n        toggleStatus: (id, status) => dispatch(A.toggleStatus(id, status)),\r\n        deleteEntry: (id) => dispatch(A.deleteEntry(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n","import React from 'react';\n\nimport List from './components/Product/List/ProductList';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"wrapper\">\n            <h1>Grocery List</h1>\n            <List />\n        </div>\n    )\n}\n\nexport default App;\n","const initialState = {\r\n    list: [\r\n        {\r\n            id: '5f54d4ef953fc802d98a11ee',\r\n            img: 'https://images.unsplash.com/photo-1506976785307-8732e854ad03?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1882&q=80',\r\n            title: 'Eggs',\r\n            status: 'have',\r\n            priority: '3'\r\n        },\r\n        {\r\n            id: '5f54d4effd80f1f8b78649cc',\r\n            img: 'https://images.unsplash.com/photo-1573333515743-56d57731dd1f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2000&q=80',\r\n            title: 'Bread',\r\n            status: 'ran out',\r\n            priority: '1'\r\n        },\r\n        {\r\n            id: '5f54d4ef5462fef6db7d2006',\r\n            img: 'https://images.unsplash.com/photo-1560872236-a2550e4f2d4f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1010&q=80',\r\n            title: 'Salt',\r\n            status: 'have',\r\n            priority: '3'\r\n        }\r\n    ],\r\n    status: 'all'\r\n}\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case 'ADD_ITEM':\r\n        return {\r\n            ...state,\r\n            list: [...state.list, payload]\r\n        }\r\n        case 'DELETE_ITEM':\r\n            return {\r\n                ...state,\r\n                list: state.list.filter(i => i.id !== payload)\r\n            }\r\n        case 'TOGGLE_STATUS':\r\n            return {\r\n                ...state,\r\n                list: state.list.map(item =>\r\n                    item.id === payload.id\r\n                    ? {...item, status: payload.status}\r\n                    : item\r\n                )\r\n            }\r\n        case 'FILTER':\r\n            return {\r\n                ...state,\r\n                status: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default productReducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from '../redux/reducer';\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormNewItem_Form__W-bcT\",\"SubmitBtn\":\"FormNewItem_SubmitBtn__F0KJi\",\"Msg\":\"FormNewItem_Msg__3r6gf\",\"Failed\":\"FormNewItem_Failed__Gz6rG\",\"Success\":\"FormNewItem_Success__2L_v2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ByStatus\":\"FilterByStatus_ByStatus__1vLe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toggle\":\"ToggleBtn_Toggle__38Ivk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Delete\":\"DeleteBtn_Delete__2VghJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ListItem_Item__2IccH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Add\":\"AddBtn_Add__1E7kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ProductList_List__22Pbh\"};"],"sourceRoot":""}